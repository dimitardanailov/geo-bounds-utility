name: Consumer Test

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tgz_path: geo-bounds-utility.tgz
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node & Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: corepack enable && corepack prepare yarn@1.22.22 --activate
      - name: Install & build
        run: yarn install --frozen-lockfile && yarn build
      - name: Pack tarball
        run: yarn pack --filename geo-bounds-utility.tgz
      - name: Upload tarball
        uses: actions/upload-artifact@v4
        with:
          name: tgz
          path: geo-bounds-utility.tgz

  test-backend:
    needs: setup
    runs-on: ubuntu-latest
    name: Test install in consumer environments (backend)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: tgz
      - run: corepack enable && corepack prepare yarn@1.22.22 --activate
      - name: Backend test
        run: |
          mkdir consumer && cd consumer
          cp ../geo-bounds-utility.tgz .
          yarn init -y
          yarn add ./geo-bounds-utility.tgz
          yarn add -D typescript @types/node
          echo "import { calculateBoundingCoordinates } from 'geo-bounds-utility';" > test.ts
          echo "const bounds = calculateBoundingCoordinates({ lat: 1, lng: 1, radiusKm: 1 }); console.log(bounds.minLat);" >> test.ts
          echo '{ "compilerOptions": { "target": "ES2022", "module": "ESNext", "moduleResolution": "node", "strict": true, "esModuleInterop": true, "types": ["node"] } }' > tsconfig.json
          npx tsc test.ts --noEmit

  test-frontend:
    needs: setup
    runs-on: ubuntu-latest
    name: Test install in consumer environments (frontend)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: tgz
      - run: corepack enable && corepack prepare yarn@1.22.22 --activate
      - name: Frontend test
        run: |
          mkdir consumer && cd consumer
          cp ../geo-bounds-utility.tgz .
          yarn init -y
          yarn add ./geo-bounds-utility.tgz
          yarn add -D typescript
          echo "import { calculateBoundingCoordinates } from 'geo-bounds-utility';" > test.ts
          echo "const bounds = calculateBoundingCoordinates({ lat: 1, lng: 1, radiusKm: 1 }); console.log(bounds.minLat);" >> test.ts
          echo '{ "compilerOptions": { "target": "ES2022", "module": "ESNext", "moduleResolution": "node", "strict": true, "esModuleInterop": true } }' > tsconfig.json
          npx tsc test.ts --noEmit

  test-tsnode:
    needs: setup
    runs-on: ubuntu-latest
    name: Test install in consumer environments (ts-node)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: tgz
      - run: corepack enable && corepack prepare yarn@1.22.22 --activate
      - name: ts-node test
        run: |
          mkdir consumer && cd consumer
          cp ../geo-bounds-utility.tgz .
          yarn init -y
          yarn add ./geo-bounds-utility.tgz
          yarn add -D typescript ts-node @types/node
          echo "import { calculateBoundingCoordinates } from 'geo-bounds-utility'; console.log(calculateBoundingCoordinates({ lat: 1, lng: 1, radiusKm: 1 }));" > test.ts
          echo '{ "compilerOptions": { "target": "ES2022", "module": "ESNext", "moduleResolution": "node", "strict": true, "esModuleInterop": true, "types": ["node"] } }' > tsconfig.json
          npx ts-node test.ts

  test-esm:
    needs: setup
    runs-on: ubuntu-latest
    name: Test install in consumer environments (esm)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: tgz
      - run: corepack enable && corepack prepare yarn@1.22.22 --activate
      - name: ESM test
        run: |
          mkdir consumer && cd consumer
          cp ../geo-bounds-utility.tgz .
          yarn init -y
          yarn add ./geo-bounds-utility.tgz
          yarn add -D typescript
          echo '{ "type": "module" }' > package.json
          echo 'import { calculateBoundingCoordinates } from "geo-bounds-utility";' > test.mts
          echo 'console.log(calculateBoundingCoordinates({ lat: 1, lng: 1, radiusKm: 1 }));' >> test.mts
          echo '{ "compilerOptions": { "target": "ES2022", "module": "ESNext", "moduleResolution": "node", "strict": true, "esModuleInterop": true } }' > tsconfig.json
          npx tsc test.mts --noEmit
          node test.mts
